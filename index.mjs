// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-square-matrix@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@esm/index.mjs";function d(e,r){return(r?a:o)("float64",new s(e*e),[e,e],[e,1],0,"row-major")}function l(e){var r;return r=new s(e),a("float64",r,[e],[1],0,"row-major")}function h(o,a){var h,f,u,p,g,c,j,v;if(v=0,e(o))f=d(h=o,!1);else{if(!r(o))throw new TypeError(n("invalid argument. First argument must either specify the order of the correlation distance matrix or be a square two-dimensional ndarray for storing the correlation distance matrix. Value: `%s`.",o));h=o.shape[0],f=o}if(j=new s(h),u=new s(h),p=new s(h),c=d(h,!0),arguments.length>1){if(!t(a))throw new TypeError(n("invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.",a));if(m(a.shape)!==h)throw new Error(n("invalid argument. The number of elements (means) in the second argument must match correlation distance matrix dimensions. Expected: `%u`. Actual: `%u`.",h,m(a.shape)));return g=a,b}return g=l(h),w;function w(e){var r,s,o,a,m,d,l,w,b,x,y,E;if(0===arguments.length)return 0===v?null:f;if(!t(e))throw new TypeError(n("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==h)throw new Error(n("0eiAH",h,e.shape[0]));if(x=(b=v)/(v+=1),r=b||1,1===v)for(y=0;y<h;y++)for(l=e.get(y),w=g.get(y),w+=(d=l-w)/v,g.set(y,w),j[y]=d,u[y]+=d*(l-w),p[y]=i(u[y]/r),s=x*j[y],E=0;E<=y;E++)o=c.get(y,E)+s*j[E],c.set(y,E,o),c.set(E,y,o);else for(y=0;y<h;y++)for(l=e.get(y),w=g.get(y),w+=(d=l-w)/v,g.set(y,w),j[y]=d,u[y]+=d*(l-w),p[y]=i(u[y]/r),s=x*j[y],m=p[y],E=0;E<y;E++)o=c.get(y,E)+s*j[E],c.set(y,E,o),c.set(E,y,o),a=1-o/r/(m*p[E]),f.set(y,E,a),f.set(E,y,a);return f}function b(e){var r,s,o,a,m,d;if(0===arguments.length)return 0===v?null:f;if(!t(e))throw new TypeError(n("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==h)throw new Error(n("0eiAI",h,e.shape[0]));for(v+=1,m=0;m<h;m++)for(a=e.get(m)-g.get(m),j[m]=a,u[m]+=a*a,p[m]=i(u[m]/v),o=p[m],d=0;d<m;d++)s=c.get(m,d)+a*j[d],c.set(m,d,s),c.set(d,m,s),r=1-s/v/(o*p[d]),f.set(m,d,r),f.set(d,m,r);return f}}export{h as default};
//# sourceMappingURL=index.mjs.map
